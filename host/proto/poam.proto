syntax = "proto3";
package poam;

service VerifiableProcessingService {
    rpc prove(ProveRequest) returns (ProveResponse);
    rpc compose(CompositionRequest) returns (CompositionResponse);
    rpc verify(VerifyRequest) returns (VerifyResponse);
    rpc combined(CombinedRequest) returns (ProveResponse);
} 

message Proof {
    repeated uint32 image_id = 1;
    bytes receipt = 2;
}

message Rule {
    string rule_name = 1;
    string rule_description = 2;
    string rule_code = 3;
}

message ProcessMetadata{
    string process_type = 1;
    string process_instance_id = 2;
    uint32 epoch_seconds = 3;
}

message PoamMetadata{
    optional Proof previous_proof = 1;
    repeated uint32 current_image_id = 2;
    repeated Rule current_rules = 3;
    repeated Rule global_ordering_rules = 4;
}

message CompositionRequest {
    repeated Proof proof_chain = 1;
}

message CompositionResponse {
    Proof proof_response = 1;
    repeated Proof proof_chain = 2;
}

message ProveRequest {
    optional ProcessMetadata process_metadata = 1;
    PoamMetadata poam_metadata = 2;
    string method_payload = 3;
}

message ProveResponse {
    string public_output = 1;
    Proof proof_response = 2;
    repeated Proof proof_chain = 4;
}

message VerifyRequest {
    double verification_value = 1;
    Proof proof = 2;
}

message VerifyResponse {
    bool is_valid_executed = 1;
    string public_output = 2;
} 

message CombinedRequest {
    string method_payload = 1;
}